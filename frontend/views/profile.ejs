<!doctype html>
<html lang="en">
<link rel="stylesheet" href="/css/profile.css">
<%- include("partials/head") %>

<body>
<%- include("partials/navbar") %>
<div class="main-content">
    <%- include("partials/navbar2") %>

    <% if (user) { %>
        <div class="profile-content">
            <div class="profile-left">
                <div class="profile-image-container">
                    <img src="/assets/avatars/default-<%= user.pfp || 1 %>.png" alt="Profile Picture" class="profile-image">
                </div>
                <div class="profile-username">
                    <h2><%= user.username %></h2>
                </div>
                <button id="changePictureBtn" class="change-picture-button" type="button">Change picture</button>

                <form id="avatarPicker" class="avatar-picker" method="POST" action="/profile/picture">
                    <input type="hidden" name="pfp" id="pfpInput" value="<%= user.pfp || 1 %>">
                    <div class="avatar-grid">
                        <% for (let i = 1; i <= 8; i++) { %>
                            <label class="avatar-option <%= (user.pfp === i) ? 'selected' : '' %>">
                                <input type="radio" name="pfpChoice" value="<%= i %>" style="display:none" <%= (user.pfp === i) ? 'checked' : '' %> />
                                <img src="/assets/avatars/default-<%= i %>.png" alt="Avatar <%= i %>">
                            </label>
                        <% } %>
                    </div>
                    <div class="avatar-actions">
                        <button type="submit" class="change-picture-button">Save</button>
                        <button type="button" id="cancelAvatar" class="change-picture-button" style="background:#777">Cancel</button>
                    </div>
                </form>
            </div>
            <div class="profile-right">
                <div class="profile-info-item">
                    <span class="info-label">Connections:</span>
                    <%
                        let connectionCount = 0;
                        if (user.socialLinks && user.socialLinks.patreon) connectionCount++;
                        if (user.socialLinks && user.socialLinks.twitter) connectionCount++;
                        if (user.socialLinks && user.socialLinks.discord) connectionCount++;
                    %>
                    <span class="info-value"><%= connectionCount %> connected account<%= connectionCount !== 1 ? 's' : '' %></span>
                </div>
                <div class="profile-info-item">
                    <span class="info-label">User ID:</span>
                    <span class="info-value"><%= user._id %></span>
                </div>
                <div class="profile-info-item">
                    <span class="info-label">Roles:</span>
                    <%
                        const userRoles = [];
                        if (user.roles.isAdmin) userRoles.push("Admin");
                        if (user.roles.isAuthor) userRoles.push("Author");
                        if (user.roles.isModerator) userRoles.push("Moderator");
                        if (user.roles.isUser) userRoles.push("User");
                    %>
                    <span class="info-value"><%= userRoles.join(', ') %></span>
                </div>
                <div class="profile-info-item">
                    <span class="info-label">Uploads:</span>
                    <span class="info-value">0</span>
                </div>
            </div>
        </div>
    <% } else { %>
        <div class="profile-content" style="text-align: center; padding: 40px;">
            <p>Please <a href="/login">log in</a> to view this page.</p>
        </div>
    <% } %>
</div>

<script>
// Simple toggling and selection handling
document.addEventListener('DOMContentLoaded', function () {
  const changeBtn = document.getElementById('changePictureBtn');
  const picker = document.getElementById('avatarPicker');
  const cancelBtn = document.getElementById('cancelAvatar');
  const pfpInput = document.getElementById('pfpInput');

  if (changeBtn && picker) {
    changeBtn.addEventListener('click', () => {
      picker.style.display = (picker.style.display === 'block') ? 'none' : 'block';
    });
  }

  if (cancelBtn) {
    cancelBtn.addEventListener('click', () => {
      picker.style.display = 'none';
    });
  }

  // When a radio changes, update hidden pfp value and selected border
  picker?.addEventListener('change', (e) => {
    if (e.target && e.target.name === 'pfpChoice') {
      pfpInput.value = e.target.value;
      document.querySelectorAll('.avatar-option').forEach(el => el.classList.remove('selected'));
      const label = e.target.closest('.avatar-option');
      label?.classList.add('selected');
    }
  });
});
</script>
</body>
</html>